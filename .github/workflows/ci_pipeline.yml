name: CI/CD Pipeline

on:
  push:
    branches:
      - feature/*  # Acionado em commits ou push nas branches de feature
      - master     # Acionado em commits ou push na branch master
  pull_request:
    branches:
      - feature/*
      - master

jobs:
  # Job para branches do tipo feature/*
  feature-snapshot:
    if: startsWith(github.ref, 'refs/heads/feature/')
    runs-on: ubuntu-latest

    steps:
      # Checkout do código
      - name: Checkout repository
        uses: actions/checkout@v3

      # Configurar o Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      # Instalar dependências
      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      # Executar o notebook e gerar snapshot
      - name: Execute stgen notebook
        run: |
          jupyter nbconvert --execute --to script stgen.ipynb
          python stgen.py


      # Salvar snapshot como artefato
      - name: Upload snapshot
        uses: actions/upload-artifact@v3
        with:
          name: stgen_output
          path: stgen_output.json

  # Job para branch master
  master-release:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest

    steps:
      # Checkout do código
      - name: Checkout repository
        uses: actions/checkout@v3

      # Configurar o Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      # Instalar dependências
      - name: Install dependencies
        run: |
          pip install -r requirements.txt


      # Criar tag para release
      - name: Create Release Tag
        run: |
          TAG_NAME="v$(date +'%Y.%m.%d.%H%M')"
          git tag $TAG_NAME
          git push origin $TAG_NAME

      # Publicar release
      - name: Publish Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "stgen_output.json"
          name: "Release ${{ github.sha }}"
          tag: $TAG_NAME
